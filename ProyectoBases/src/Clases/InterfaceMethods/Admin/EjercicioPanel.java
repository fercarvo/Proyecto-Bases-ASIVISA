/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Clases.InterfaceMethods.Admin;

import Clases.InterfaceMethods.ConnectDbInterface;
import Clases.InterfaceMethods.Verificar;
import Clases.InterfaceMethods.Validate;
import Clases.Util.*;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SpringLayout;

/**
 *
 * @author Clases
 */
public class EjercicioPanel extends JPanel implements Verificar, ConnectDbInterface{

    private cbListenerToPanel listener;
    
    public EjercicioPanel() {
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaDescripcion = new javax.swing.JTextArea();
        cbIntensidad = new javax.swing.JComboBox();
        cbAreaDelCuerp = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        txtCalorias = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        AreaADC = new javax.swing.JPanel(new FlowLayout());
        listener = new cbListenerToPanel(AreaADC);
        
        jPanel2.setLayout(new SpringLayout());
        setLayout(new BorderLayout());
        
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("ID:");
        jPanel2.add(jLabel1);

        jPanel2.add(lblId);
        
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Nombre:");
        jPanel2.add(jLabel2);
        
        txtNombre.addFocusListener(new StringValidateTxt());
        jLabel2.setLabelFor(txtNombre);
        jPanel2.add(txtNombre);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Descripci√≥n:");
        jPanel2.add(jLabel3);

        jLabel3.setLabelFor(jScrollPane1);
        
        txtAreaDescripcion.setColumns(28);
        txtAreaDescripcion.setRows(5);
        jScrollPane1.setViewportView(txtAreaDescripcion);

        jPanel2.add(jScrollPane1);
        
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Intensidad:");
        jPanel2.add(jLabel4);
        
        jLabel4.setLabelFor(cbIntensidad);
        jPanel2.add(cbIntensidad);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Areas del Cuerpo:");
        jPanel2.add(jLabel5);

        cbAreaDelCuerp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbAreaDelCuerp.addActionListener(listener);
        jPanel2.add(cbAreaDelCuerp);

        JLabel temp = new JLabel("", JLabel.TRAILING);
        jPanel2.add(temp);
       
        temp.setLabelFor(AreaADC);
        jPanel2.add(AreaADC);
        
        jLabel6.setText("Calorias:");
        jPanel2.add(jLabel6);
        
        jLabel6.setLabelFor(txtCalorias);
        jPanel2.add(txtCalorias);
        
        SpringUtilities.makeCompactGrid(jPanel2,
                                        7, 2, //Filas, columnas
                                        6, 6, //initX, initY
                                        6, 6); //xPad, yPad
        jScrollPane2.setSize(jPanel2.getLayout().preferredLayoutSize(jPanel2));
        jScrollPane2.setViewportView(jPanel2);

        add(jScrollPane2, BorderLayout.CENTER);
        
    }// </editor-fold>                        

    // Variables declaration - do not modify                     
    private javax.swing.JComboBox cbAreaDelCuerp;
    private javax.swing.JComboBox cbIntensidad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblId;
    private javax.swing.JPanel AreaADC;
    private javax.swing.JTextArea txtAreaDescripcion;
    private javax.swing.JTextField txtCalorias;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration 

    @Override
    public boolean verificarDatos() {
        if(!datosVacios()){
            if(Validate.isOnlyNum(txtCalorias.getText()))
                    return true;
            else Messages.errorMessage("Ingrese solo numeros");
            
        }
        return false;
    }

    @Override
    public boolean datosVacios() {
        if(txtNombre.getText().isEmpty())
            return true;
        else Messages.errorMessage("Ingrese un nombre para el ejercicio");
        return false;
    }

    @Override
    public boolean escribirDatosDB() {
        ArrayList<String> nameLabelsPanel = listener.getNameLabelsPanel();
        for (String txt:nameLabelsPanel)
            System.out.println(txt);
        return false;
    }

    @Override
    public boolean verificarEscrituraDB() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean verificarLecturaDB() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean leerDatosDB() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    
    
}
